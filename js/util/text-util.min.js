function getTextWidth(e,t){const i=(getTextWidth.canvas||(getTextWidth.canvas=document.createElement("canvas"))).getContext("2d");return i.font=t,i.measureText(e).width}const invalidEnglishRegex=/[^\u0021-\u007E\s\u2018-\u201A\u201C-\u201D]/gi,invalidEnglishString="[^!-~s‘-‚“-”]";!function(e,t){function l(n,s,h,r){n.forEach((e,t,i)=>{s<=t||(e.highlight[0]>=h&&(e.highlight[0]+=r),e.highlight[1]>=h&&(e.highlight[1]+=r),n[t]=e)})}t.quoteNormalize=function(){return this.replace(/[“‟”„″‶❝❞〝〞＂]/gi,'"').replace(/[´＇｀`‘’‛′‵❛❜]/gi,"'").replace(/[‚،﹐﹑，､]/gi,",").replace(/\u00A0/gi," ")},t.capitalize1st=function(){return this.charAt(0).toUpperCase()+this.slice(1)},t.parseToSentences=function(){return this.quoteNormalize().concatLines().insertSpace().shrinkSpaces().splitSentences()},t.concatLines=function(){return this.replace(/[\r\n]/g," ").trim()},t.insertSpace=function(){return this.replace(/(\b[a-z]\w*\W)([A-Z]\w*)/g,"$1 $2")},t.shrinkSpaces=function(){return this.replace(/\s+/g," ").replace(/\s+([,.?!;:]+)/g,"$1")},t.sentenceNormalize=function(){return this.quoteNormalize().concatLines().shrinkSpaces().capitalize1st()},t.splitSentences=function(){try{return this.split(new RegExp('(?<!\\w\\.\\w.)(?<![A-Z][a-z]\\.)(?<! [A-Z]\\.)(?<=[\\.\\!\\?"])\\s',"gm"))}catch(e){if(console.warn('This browser does not support the RegExp "(?<=X)" and "(?<!X)", so it takes longer than other browsers...'),!this.match(/\s/))return[this];const h=[];let t=0,i=this.matchAll(/\s/gm);for(var n of i){var s=this.charAt(n.index-1);!/[\.\!\?]/.test(s)||/\w\.\w./.test(s)||/[A-Z][a-z]\./.test(s)||/ [A-Z]\./.test(s)||(h.push(this.substring(t,n.index)),t=n.index+1)}return t<=this.length+1&&h.push(this.substring(t)),h}},t.isSentence=function(){try{return/[A-Z\d'"]/.test(this.charAt())&&this.match(new RegExp("(?<!\\w\\.\\w.)(?<![A-Z][a-z]\\.)(?<=[\\.\\!\\?])","g"))?.index==this.length}catch(e){if(console.warn('This browser does not support the RegExp "(?<=X)" and "(?<!X)", so it takes longer than other browsers...'),/[A-Z\d'"]/.test(this.charAt())&&/[\.\?\!]['"]?$/.test(this)){var t;for(t of this.matchAll(/\S+[\.\?\!]['"]?/g))if(!/\w\.\w.$/.test(t[0])&&!/[A-Z][a-z]\.$/.test(t[0]))return t.index+t[0].length==this.length;return!1}return!1}},e.extractHighlightInfo=function(n,s){let e=0,h=[],t;for(;null!=(t=/\s*([‚،﹐﹑，､])|([“‟”„″‶❝❞〝〞＂])|([´＇｀`‘’‛′‵❛❜])|(\s{2,})|\s+([,.!?:;])|((?:\w[,!?:;]\w+)|((?:\w[,!?:;]\w+)|(?:[A-z]\.(?:[A-z]{2,}|\d+|I'[a-z]+))|\d\.[A-z]+) )|(?:'\s+((?:s|re|m|d|t|ll|ve)\s))|(?:\s+'((?:s|re|m|d|t|ll|ve)\s))/.exec(n));)for(e=1;e<9;e++)if(null!=t[e]){switch(e){case 1:s>=t.index&&(s-=t[0].length-1),h.push({highlight:[t.index,t.index+1]}),n=n.replace(t[0],",");break;case 2:h.push({highlight:[t.index,t.index+1]}),n=n.replace(t[0],'"');break;case 3:h.push({highlight:[t.index,t.index+1]}),n=n.replace(t[0],"'");break;case 4:s>=t.index&&(s-=t[0].length-1),h.push({highlight:[t.index,t.index+1]}),n=n.replace(t[0]," ");break;case 5:s>=t.index&&(s-=t[0].length-1),h.push({highlight:[t.index,t.index+2]}),n=n.replace(t[0],t[e]);break;case 6:s>=t.index+1&&(s+=1),h.push({highlight:[t.index+2,t.index+3]}),n=n.replace(t[0],t[e].substring(0,2)+" "+t[e].substring(2));break;case 7:case 8:s>=t.index&&(s-=t[0].length-1-t[e].length),h.push({highlight:[t.index,t.index+t[e].length]}),n=n.replace(t[0],"'"+t[e])}break}var r=h.length;for(const a of n.matchAll(/(["'])(?:(?!s|re|m|d|t|ll|ve)\s)((?:\u0021|[\u0023-\u0026]|[\u0028-\u007E]|\s|(?:'(?:s|re|m|d|t|ll|ve)\s))+)\1(?!(?:(?:s|re|m|d|t|ll|ve) ))/g)){let e="",t=a[2],i=a.index+a[0].length;0==a.index||/\s/.test(n[a.index-1])||(l(h,r,a.index,1),h.push({highlight:[a.index,a.index+1]}),s>=a.index&&s++,e+=" ",i++),t.startsWith(" ")&&(l(h,r,a.index,-1),s>=a.index&&s--,t=t.trimStart(),i--),t.endsWith(" ")&&(l(h,r,a.index+t.length,-1),s>=a.index+t.length&&s--,t=t.trimEnd(),i--),e+=a[1]+t+a[1],null==n[a.index+a[0].length]||/\s|[,.!?:;]/.test(n[a.index+a[0].length])||(l(h,r,i+1,1),h.push({highlight:[i,i+1]}),s>=i+1&&s++,e+=" "),n=n.replace(a[0],e)}return{input:n=n.replaceAll(invalidEnglishRegex,"×"),inputCursor:s,arr:h}}}(this,String.prototype);